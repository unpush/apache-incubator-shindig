<?xml version="1.0" encoding="UTF-8"?>

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>Overview Of Shindig</title>
    <author>Vincent Siveton</author>
    <date>2009-04-06</date>
  </properties>
  <body>
    <section name="Introduction">
      <p>Shindig, a word meaning party, was originally started by Google in 2007 as a
        reference container for hosting OpenSocial compatible widgets in any website.
        Originally a port of Google's iGoogle gadget container, with Brain McCallister's PHP
        code, Shindig through off it's egg shell, and showed that Google was serious about
        making OpenSocial accessible to a larger number of sites. Since December 2007,
        Shindig is now an Apache project.</p>
    </section>
    <section name="Shindig's objectives">
      <div class="logo">
        <img src="./images/logos/java-logo.png" alt="Java"/>
        <img src="./images/logos/php-logo.gif" alt="PHP"/>
      </div>
      <p> Shindig's primary goal is to provide infrastructure for those wishing to host
        OpenSocial apps on their websites. Another goal of Shindig is to be language neutral
        and cover multiple languages.</p>

      <p>Currently, Java and PHP versions are availables and supported.</p>
    </section>
    <section name="Shindig Components">
      <subsection name="Server Side">
        <p>The Java and PHP version of Shindig have 3 major server side components:</p>
        <ol>
          <li>Persistent Data Loading Mechanism;</li>
          <li>Gadget Rendering Infrastructure;</li>
          <li>OpenSocial server side implementation.</li>
        </ol>
        <p>
          <img src="./images/shindig-server-java.jpg" alt="Shindig Java Components"/>
        </p>
        <p>
          <i>Components of Shindig Java Server Side container</i>
        </p>

        <p>
          <img src="./images/shindig-server-php.jpg" alt="Shindig PHP Components"/>
        </p>
        <p>
          <i>Components of Shindig PHP Server Side container</i>
        </p>
      </subsection>
      <subsection name="Client Side">
        <p>The Javascript features are:</p>
        <ul>
          <li>Gadget container (gadget.js), fully opensocial gadget compliant;</li>
          <li>OpenSocial container;</li>
          <li><a href="http://www.json.org/">JSON</a>, Restful container and <a
              href="http://code.google.com/p/google-caja/">Caja</a> support.</li>
        </ul>
        <p>
          <img src="./images/shindig-client.jpg" alt="Shindig Client Flow"/>
        </p>
      </subsection>

      <subsection name="Put It Together: OpenSocial Flow">
        <p>The following is a typical flow to get a list of Friends.</p>

        <h4>Server Side Flow</h4>
        <ol>
          <li>Call JsonRpcServlet;</li>
          <li>Get the appropriate handler;</li>
          <li>Get the JSON object from the DB;</li>
          <li>Populate responses into a list;</li>
          <li>Return to the client.</li>
        </ol>

        <p>In the case of the REST use, the flow will be:</p>
        <ol>
          <li>Call DataServiceServlet;</li>
          <li>Get the appropriate converter;</li>
          <li>Get the handler;</li>
          <li>Get the JSON object from the DB;</li>
          <li>Return to the client.</li>
        </ol>

        <h4>Client Side Flow</h4>
        <ol>
          <li>Create request object;</li>
          <li>Populate request parameters;</li>
          <li>Send the request.</li>
        </ol>
      </subsection>
    </section>

    <section name="OpenSocial APIs">
      <p>Shindig implements several OpenSocial APIs:</p>
      <ul>
        <li><b>OpenSocial REST</b>: for server to server communication</li>
        <li><b>OpenSocial JSON-RPC</b>: for gadget to server communication</li>
        <li><b>Javascript</b>: for gadgets</li>
      </ul>

      <subsection name="OpenSocial REST">
        <p>There are four types of REST services which can be exposed by Shindig:
          <i>people</i>, <i>activities</i>, <i>appdata</i> and <i>groups</i>.There are URI
          Templates defined for each type of service.</p>
        <p>For instance, <a href="http://localhost:8080/social/rest/people/john.doe"
          >http://localhost:8080/social/rest/people/john.doe</a></p>
        <table>
          <thead>
            <tr>
              <th>Type</th>
              <th>Spec.</th>
              <th>URI-Template</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <b>People</b>
              </td>
              <td>
                <a
                  href="http://docs.google.com/View?docid=dcc2jvzt_37hdzwkmf8#ssc:290"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>/social/rest/people/{guid}/@all</dt>
                  <dd>Collection of all people connected to user {guid}</dd>
                  <dt>/social/rest/people/{guid}/@all</dt>
                  <dd>Collection of all people connected to user {guid}</dd>
                  <dt>/social/rest/people/{guid}/@friends</dt>
                  <dd>Collection of all friends of user {guid}; subset of @all</dd>
                  <dt>/social/rest/people/{guid}/{groupid}</dt>
                  <dd>Collection of all people connected to user {guid} in group
                    {groupid}</dd>
                  <dt>/social/rest/people/{guid}/@all/{pid}</dt>
                  <dd>Individual person record for a specific person known to
                    {guid}; shows {guid}'s view of {pid}.</dd>
                  <dt>/social/rest/people/{guid}/@self</dt>
                  <dd>Profile record for user {guid}</dd>
                  <dt>/social/rest/people/@me/@self</dt>
                  <dd>Profile record for requestor</dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>Activities</b>
              </td>
              <td>
                <a
                  href="http://docs.google.com/View?docid=dcc2jvzt_37hdzwkmf8#ssc:315"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>/social/rest/activities/{guid}/@self</dt>
                  <dd>Collection of activities generated by given user</dd>
                  <dt>/social/rest/activities/{guid}/@friends</dt>
                  <dd>Collection of activities for friends of the given user
                    {guid}</dd>
                  <dt>/social/rest/activities/{guid}/{groupid}</dt>
                  <dd>Collection of activities for people in group {groupid}
                    belonging to given user {uid}</dd>
                  <dt>/social/rest/activities/{guid}/@self/{activityid}</dt>
                  <dd>Individual activity resource; usually discovered from
                    collection</dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>Appdata</b>
              </td>
              <td>
                <a
                  href="http://docs.google.com/View?docid=dcc2jvzt_37hdzwkmf8#ssc:328"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>/social/rest/appdata/{guid}/@self/{appid}</dt>
                  <dd>All app data for user {guid}, app {appid}</dd>
                  <dt>/social/rest/appdata/{guid}/@friends/{appid}</dt>
                  <dd>All app data for friends of user {guid} and app {appid};
                    read-only (only GET and HEAD supported)}</dd>
                  <dt>/social/rest/appdata/{guid}/@self/{appid}?fields=count</dt>
                  <dd>Just the count field for user {guid}, app {appid}</dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>Group</b>
              </td>
              <td>
                <a
                  href="http://docs.google.com/View?docid=dcc2jvzt_37hdzwkmf8#ssc:310"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>/social/rest/groups/{guid}</dt>
                  <dd>Collection of groups associated with user {guid}</dd>
                </dl>
              </td>
            </tr>
          </tbody>
        </table>
      </subsection>

      <subsection name="OpenSocial JSON-RPC">
        <p>Shindig implements all required RPC services: <i>People</i>, <i>Activities</i>,
            <i>Appdata</i>, <i>Messages</i> and <i>System</i>.</p>
        <p><b>Note</b>: Shindig doesn't implement all methods defined in <a
            href="http://docs.google.com/View?docid=dhjrqr8t_4cwzqq7gh#tqgg1">OpenSocial
            RPC Protocol, Section 8, Services</a> but these missing methods are not
          required to be OpenSocial compliant.</p>
        <table>
          <thead>
            <tr>
              <th>Type</th>
              <th>Spec.</th>
              <th>Service method</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <b>People</b>
              </td>
              <td>
                <a href="http://docs.google.com/View?docid=dhjrqr8t_4cwzqq7gh#livr1"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>people.get</dt>
                  <dd>Retrieve a single person or list of opensocial.Person
                    objects.</dd>
                  <dt>people.supportedFields</dt>
                  <dd>List the supported fields for this service.</dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>Activities</b>
              </td>
              <td>
                <a href="http://docs.google.com/View?docid=dhjrqr8t_4cwzqq7gh#id2e"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>activities.create</dt>
                  <dd>Support creating opensocial.Activity objects as the targets
                    of a relationship with the specified user.</dd>
                  <dt>activities.get</dt>
                  <dd>Retrieve a one or list of opensocial.Activity objects.</dd>
                  <dt>activities.update</dt>
                  <dd>Support updating opensocial.Activity objects as the targets
                    of a relationship with the specified user.</dd>
                  <dt>activities.delete</dt>
                  <dd>Support removing the relationship between an
                    opensocial.Activity and the specified user.</dd>
                  <dt>activities.supportedFields</dt>
                  <dd>List the supported fields for this service.</dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>Appdata</b>
              </td>
              <td>
                <a href="http://docs.google.com/View?docid=dhjrqr8t_4cwzqq7gh#j4b90"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>appdata.create</dt>
                  <dd>Support creating key-value pairs in a user appdata.<b>Not
                      defined in the spec.</b></dd>
                  <dt>appdata.get</dt>
                  <dd>Retrieve a map of key-value pairs for the list of specified
                    keys.</dd>
                  <dt>appdata.update</dt>
                  <dd>Add or replace key-value pairs stored in a users appdata
                    with the key-vaues in the data parameter.</dd>
                  <dt>appdata.delete</dt>
                  <dd>Remove the specifed keys from a users appdata and returned
                    the values associated with those removed keys.</dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>Messages</b>
              </td>
              <td>
                <a href="http://docs.google.com/View?docid=dhjrqr8t_4cwzqq7gh#c16v"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>messages.create</dt>
                  <dd>Support creating opensocial.Message objects. <b>Not defined
                      in the spec.</b></dd>
                  <dt>messages.get</dt>
                  <dd>etrieve a one or list of opensocial.Message objects. <b>Not
                      defined in the spec.</b></dd>
                  <dt>messages.modify</dt>
                  <dd>Support updating opensocial.ActivityMessage objects. <b>Not
                      defined in the spec.</b></dd>
                  <dt>messages.delete</dt>
                  <dd>Support removing opensocial.ActivityMessage objects. <b>Not
                      defined in the spec.</b></dd>
                </dl>
              </td>
            </tr>
            <tr>
              <td>
                <b>System</b>
              </td>
              <td>
                <a href="http://docs.google.com/View?docid=dhjrqr8t_4cwzqq7gh#q:_q1"
                  >Spec.</a>
              </td>
              <td>
                <dl>
                  <dt>system.listMethods</dt>
                  <dd>Returns an array of all methods supported by the endpoint
                    including the system methods.</dd>
                  <dt>messages.methodSignatures</dt>
                  <dd>Returns a method signature describing the types of the
                    parameters. <b>Not implemented yet.</b></dd>
                  <dt>messages.methodHelp</dt>
                  <dd>Returns a textual description of the operation identified by
                    the methodName parameter. <b>Not implemented yet.</b></dd>
                </dl>
              </td>
            </tr>
          </tbody>
        </table>
      </subsection>

      <subsection name="OpenSocial JavaScript">
        <p>Shindig includes all JavaScript APIs as described in <a
            href="http://www.opensocial.org/Technical-Resources/opensocial-spec-v08/opensocial-reference08"
            >OpenSocial API Reference</a> and <a
            href="http://www.opensocial.org/Technical-Resources/opensocial-spec-v08/gadgets-reference08"
            >Gadgets API Reference</a>.</p>
        <p>See also the <a href="./shindig-1.1.x/shindig-features/jsdoc/index.html"
            >JavascriptDoc for Shindig 1.1.x.</a></p>
      </subsection>
    </section>

    <section name="Resources">
      <ul>
        <li><a href="http://rajdeep.dua.googlepages.com/shindigPHP-overview-tidy_img.html">
            Shindig : An Architectural Overview (PHP Version)</a> by Rajdeep Dua. </li>
        <li><a
            href="http://chrisschalk.com/shindig_docs/rajdeep/shindig-overview/onjava-shindig-overview-tidy.html"
            > Architectural Overview of Shindig , an OpenSocial Reference
          Implementation</a> by Rajdeep Dua. </li>
        <li><a href="http://sites.google.com/site/opensocialarticles/Home/shindig-rest-java"
            >Overview of REST Implementation in Shindig - Java Version</a> by Rajdeep
          Dua. </li>
        <li>
          <a href="http://www.opensocial.org/page/specs-1">OpenSocial specifications</a>
        </li>
      </ul>
    </section>
  </body>
</document>
